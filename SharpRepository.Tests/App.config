<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="sharpRepository" type="SharpRepository.Repository.Configuration.SharpRepositorySection, SharpRepository.Repository"/>
    <section name="sharpRepository2" type="SharpRepository.Repository.Configuration.SharpRepositorySection, SharpRepository.Repository"/>
    <section name="memcached" type="Enyim.Caching.Configuration.MemcachedClientSection, Enyim.Caching"/>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog"/>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>
  <connectionStrings>
    <add name="EfCoreConnectionString" connectionString="Data Source=:memory:;"/>
  </connectionStrings>
  <sharpRepository>
    <repositories default="inMemory">
      <repository name="inMemory" factory="SharpRepository.InMemoryRepository.InMemoryConfigRepositoryFactory, SharpRepository.InMemoryRepository"/>
      <repository name="efCoreRepos" factory="SharpRepository.EfCoreRepository.EfCoreConfigRepositoryFactory, SharpRepository.EfCoreRepository" connectionString="EfConnectionString" dbContextType="SharpRepository.Tests.TestObjects.TestObjectContext, SharpRepository.Tests" cachingStrategy="timeout"/>
      <repository name="inMemoryNoCaching" factory="SharpRepository.InMemoryRepository.InMemoryConfigRepositoryFactory, SharpRepository.InMemoryRepository" cachingStrategy="none"/>
    </repositories>
    <cachingProviders default="inMemoryProvider">
      <cachingProvider name="inMemoryProvider" factory="SharpRepository.Repository.Caching.InMemoryConfigCachingProviderFactory, SharpRepository.Repository"/>
      <!--      <cachingProvider name="redisProvider" factory="SharpRepository.Caching.Redis.RedisConfigCachingProviderFactory, SharpRepository.Caching.Redis" host="127.0.0.1" port="6379"/>-->
      <!--      <cachingProvider name="memCachedProvider" factory="SharpRepository.Caching.Memcached.MemCachedConfigCachingProviderFactory, SharpRepository.Caching.Memcached" sectionName="memcached"/>-->
    </cachingProviders>
    <cachingStrategies default="standard">
      <cachingStrategy name="standard" factory="SharpRepository.Repository.Caching.StandardConfigCachingStrategyFactory, SharpRepository.Repository" generational="true" writeThrough="false"/>
      <cachingStrategy name="timeout" factory="SharpRepository.Repository.Caching.TimeoutConfigCachingStrategyFactory, SharpRepository.Repository" timeout="200"/>
      <cachingStrategy name="none" factory="SharpRepository.Repository.Caching.NoCachingConfigCachingStrategyFactory, SharpRepository.Repository"/>
    </cachingStrategies>
  </sharpRepository>
  <sharpRepository2>
    <repositories>
      <repository name="efCore" factory="SharpRepository.EfCoreRepository.EfCoreConfigRepositoryFactory, SharpRepository.EfCoreRepository" connectionString="EfCoreConnectionString" dbContextType="SharpRepository.Tests.TestObjects.TestObjectContext, SharpRepository.Tests"/>
      <repository name="ef" factory="SharpRepository.EfRepository.EfConfigRepositoryFactory, SharpRepository.EfRepository" connectionString="EfConnectionString" dbContextType="SharpRepository.Tests.TestObjects.TestObjectEntities, SharpRepository.Tests"/>
      <repository name="inMem" factory="SharpRepository.InMemoryRepository.InMemoryConfigRepositoryFactory, SharpRepository.InMemoryRepository"/>
    </repositories>
  </sharpRepository2>
  <memcached>
    <servers>
      <add address="192.168.2.160" port="11211"/>
      <add address="192.168.2.162" port="11211"/>
    </servers>
  </memcached>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework"/>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer"/>
    </providers>
  </entityFramework>
 

  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <targets>
      <target name="file" xsi:type="File" layout="${longdate} ${logger} ${message}" fileName="nlog.txt" keepFileOpen="false" encoding="iso-8859-2"/>
    </targets>
    <rules>
      <logger name="*" minlevel="Debug" writeTo="file"/>
    </rules>
  </nlog>

  <log4net>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="log4net.txt"/>
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="10"/>
      <maximumFileSize value="5MB"/>
      <staticLogFileName value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
    </appender>
    <root>
      <level value="DEBUG"/>
      <appender-ref ref="RollingFileAppender"/>
    </root>
  </log4net>
</configuration>